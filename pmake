#!/usr/bin/perl
# Maximillian Nibler mnibler@ucsc.edu

use strict;
use warnings;

my %lineHash = ();
my %listNodes;
sub makeList{
    my %listStruct;
    $listStruct{head} = "@_";
    #print "$listStruct{head}";
    return %listStruct;
}

%listNode = makeList("testing");
$listNode{node} = "huh";
print "$listNode{head} $listNode{node}";
#read in the Makefile
open(DATA, "<Makefile") or die "Couldn't open file Makefile, $!";
while(<DATA>) {
    my $parse = "$_";
    my $line = $parse =~ m/#/? "$`" : "$parse";
    puthash ($line);
}
sub extMacro {
    my $inpLine;
    $inpLine = "@_";
    my $mac = $inpLine =~ m/:/? "$`" : "error extract macro \n";
    storeTargets ("$'");
    return $mac;
}
sub storeTargets{
    my $tarLine;
    my %listHead;
    $tarLine = "@_";
    $tarLine =~ tr/ \n//ds;
    print "$tarLine\n";
    %listHead = makeList("$tarLine");
    return %listHead;
}
sub storeRecipe{
    my $recipeLine;
    $recipeLine = "@_";
    $recipeLine =~ tr/ \n//ds;
    return $recipeLine;
}
#store
sub puthash {
    $lineHash{"$@_"} = "@_";
    my $key = $lineHash{"$@_"} =~ /^(\S+)\s*:\s*(.*?)\s*$/? extMacro ("@_") : storeRecipe("@_");
    
    print "$key\n";
}
my %strsignal = (
    1 => "Hangup",
    2 => "Interrupt",
    3 => "Quit",
    4 => "Illegal instruction",
    5 => "Trace/breakpoint trap",
    6 => "Aborted",
    7 => "Bus error",
    8 => "Floating point exception",
    9 => "Killed",
   11 => "Segmentation fault",
   13 => "Broken pipe",
   14 => "Alarm clock",
   15 => "Terminated",
   16 => "Stack fault",
   17 => "Child exited",
   18 => "Continued",
   19 => "Stopped (signal)",
   20 => "Stopped",
   21 => "Stopped (tty input)",
   22 => "Stopped (tty output)",
   24 => "CPU time limit exceeded",
   25 => "File size limit exceeded",
   26 => "Virtual timer expired",
   27 => "Profiling timer expired",
   28 => "Window changed",
   29 => "I/O possible",
   30 => "Power failure",
   31 => "Bad system call",
);
